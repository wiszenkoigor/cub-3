resource "aws_iam_role" "codebuild_role" {
  name = "codebuild-service-role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "codebuild.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
EOF
}

resource "aws_iam_role_policy" "codebuild_policy" {
  name   = "codebuild-policy"
  role   = aws_iam_role.codebuild_role.name
  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ecr:GetAuthorizationToken",
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "eks:DescribeCluster",
        "eks:DescribeNodegroup",
        "eks:DescribeFargateProfile",
        "eks:ListFargateProfiles",
        "eks:CreateFargateProfile",
        "eks:DeleteFargateProfile",
        "eks:DescribeUpdate",
        "eks:UpdateClusterVersion",
        "eks:CreateNodegroup",
        "eks:DeleteNodegroup",
        "eks:UpdateNodegroupConfig",
        "eks:UpdateNodegroupVersion",
        "eks:CreateAddon",
        "eks:DeleteAddon",
        "eks:UpdateAddon",
        "eks:TagResource",
        "eks:UntagResource",
        "eks:AssociateEncryptionConfig",
        "eks:DisassociateEncryptionConfig",
        "eks:ListUpdates",
        "eks:ListClusters"
      ],
      "Resource": "*"
    }
  ]
}
EOF
}
